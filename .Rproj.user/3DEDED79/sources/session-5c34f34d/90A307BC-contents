---
output: pdf_document
---
```{r}

##For Question 1:

##Uploading
theUrl = "http://pbrown.ca/teaching/appliedstats/data/motorcycle.rds"
theFile = basename(theUrl)
if (!file.exists(theFile)) download.file(theUrl, theFile)
x = readRDS(theFile)

#install.packages('mgcv')
#library(mgcv)
#install.packages("htmltools")

#remove.packages("htmltools")
#install.packages("htmltools")

#install.packages("remotes")
#remotes::install_version("htmltools", version = "0.5.7")


# Convert date to integer representation
x$dateInt <- as.integer(x$date)

# Compute log of the number of days in each month
x$logMonthDays <- log(Hmisc::monthDays(x$date))

# Extract month as a factor with proper ordering
x$month <- factor(
  format(x$date, "%b"), 
  levels = format(ISOdate(2000, 1:12, 1), "%b")
)

# Fit a Poisson regression model with a log link
res <- glm(
  killed ~ offset(logMonthDays) + dateInt + month, 
  data = x, 
  family = poisson(link = "log")
)

# Create a new dataset for prediction
newdata <- data.frame(
  date = seq(as.Date("1975/1/1"), as.Date("2030/1/1"), by = "month")
)

# Transform new data similar to original dataset
newdata$dateInt <- as.integer(newdata$date)
newdata$logMonthDays <- log(30)

# First prediction: using March as the month
newdata$month <- "Mar"
pred1 <- predict(res, newdata)

# Second prediction: using the actual month of each date
newdata$month <- format(newdata$date, "%b")
pred2 <- predict(res, newdata)

# Plot original data
plot(
  x$date, x$killed, 
  cex = 0.2, log = "y", 
  xlab = "", ylab = ""
)

# Add predicted lines to the plot
matlines(
  newdata$date, exp(cbind(pred1, pred2)), 
  lty = 1
)

```

```{r}
# 1)
## Use a negative binomial to account for overdispersion in the data, due to seasonality, deaths may be more common in one month
## over the other, making fitting a poission not as good of an assumption since poisson assumes all variances are equal. Additionally the negative binomial models count data, therefore it is always non-negative, the death counts will always be non-negative.

#2)
library('mgcv')
fittedmodel = gam(
  killed ~ month + s(dateInt) + offset(logMonthDays), 
  family = nb,  
  method = 'ML', 
  data = x
)

summary(fittedmodel)

names(x)
##3 
newX2 = x
newX2$month = format(newX2$date, '%b')

pred2 = do.call(cbind, predict(
  fittedmodel, newX2, se.fit = TRUE
)) %*% Pmisc::ciMat()

matplot(
  newX2$date,
  exp(cbind(pred1, pred2)),
  lty = rep(c(1, 2, 2), 2),
  col = rep(c('blue', 'red'), each = 3),
  log = 'y', type = 'l', xlab = '',
  ylab = 'deaths', xaxs = 'i'
)

points(x$date, x$killed, cex = 0.2)


```